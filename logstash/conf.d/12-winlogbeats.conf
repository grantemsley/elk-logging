filter {
    if [type] == "wineventlog" {
        # Remove ::ffff from IP addresses
        mutate {
            gsub => ["[event_data][IpAddress]", "::ffff:", ""]
        }

        # Drop logs we don't care about
        if [log_name] == "System" and [event_id] == 7036 and [event_data][param1] == "Windows Modules Installer" { drop {} } # Services starting/stopping that do it constantly as part of normal operation
        if [log_name] == "System" and [event_id] == 7036 and [event_data][param1] == "WinHTTP Web Proxy Auto-Discovery Service" { drop {} } # Services starting/stopping that do it constantly as part of normal operation
        if [log_name] == "System" and [event_id] == 7036 and [event_data][param1] == "Windows Update" { drop {} } # Services starting/stopping that do it constantly as part of normal operation
        if [log_name] == "System" and [event_id] == 7036 and [event_data][param1] == "Software Protection" { drop {} } # Services starting/stopping that do it constantly as part of normal operation
        if [log_name] == "System" and [event_id] == 7036 and [event_data][param1] == "Virtual Disk" { drop {} } # Services starting/stopping that do it constantly as part of normal operation
        if [log_name] == "System" and [event_id] == 7036 and [event_data][param1] == "Remote Registry" { drop {} } # Services starting/stopping that do it constantly as part of normal operation
        if [log_name] == "System" and [event_id] == 7036 and [event_data][param1] == "Optimize drives" { drop {} } # Services starting/stopping that do it constantly as part of normal operation
        if [log_name] == "System" and [event_id] == 7040 and [event_data][param1] == "Background Intelligent Transfer Service" { drop {} } # Service being set to on demand/auto, very spammy
        if [log_name] == "System" and [event_id] == 1500 { drop {} } # Group policy processing
        if [log_name] == "System" and [event_id] == 1501 { drop {} } # Group policy processing
        if [log_name] == "System" and [event_id] == 1 and [source_name] == "Microsoft-Windows-Kernel-General" { drop {} } # Time changing, due to NTP syncing
        if [log_name] == "Security" and [event_id] == 4616 and [event_data][SubjectUserName] == "LOCAL SERVICE" and [source_name] == "Microsoft-Windows-Security-Auditing" { drop {} } # Time changing, due to NTP syncing
        if [log_name] == "Security" and [event_id] == 5136 and [event_data][AttributeLDAPDisplayName] == "msPKIAccountCredentials" { drop {} } # msPKIAccountCredentials changes all the time due to certificate roaming, ignore it

        # Ignore logons from DWM-# and the like - they are part of the windows desktop manager in Windows 8 and up, not real logons. Even though they are logged as an interactive logon...
        if [log_name] == "Security" and [event_data][TargetDomainName] == "Window Manager" and [event_data][TargetUserName] =~ /^DWM-\d+$/ { drop {} }
        if [log_name] == "Security" and [event_data][TargetDomainName] == "Font Driver Host" and [event_data][TargetUserName] =~ /^UMFD-\d+$/ { drop {} }
        


        # Handle security logs - clean up some event logs - remove the long full message so they don't eat up too much space and add short messages to make them easier to read
        if [log_name] == "Security" {
            if [event_id] == 4624 or [event_id] == 4634 {
                mutate {
                    remove_field => ["message"]
                    add_field => { "short_message" => "Logon Activity" }
                }
            }
            if [event_id] == 4625 {
                mutate {
                    remove_field => ['message']
                    add_field => { "short_message" => "Logon Failure" }
                }
            }
            if [event_id] == 4648 {
                mutate {
                    remove_field => ['message']
                    add_field => { "short_message" => "A logon was attempted using explicit credentials" }
                }
            }

            # User account management actions
            if [event_id] == 4720 { mutate { add_field => { "short_message" => "A user account was created"} } }
            if [event_id] == 4722 { mutate { add_field => { "short_message" => "A user account was enabled"} } }
            if [event_id] == 4723 { mutate { add_field => { "short_message" => "A user changed their own password"} } }
            if [event_id] == 4724 { mutate { add_field => { "short_message" => "An administrator reset password"} } }
            if [event_id] == 4725 { mutate { add_field => { "short_message" => "A user account was disabled"} } }
            if [event_id] == 4726 { mutate { add_field => { "short_message" => "A user account was deleted"} } }
            if [event_id] == 4738 { mutate { add_field => { "short_message" => "A user account was changed"} } }
            if [event_id] == 4740 { mutate { add_field => { "short_message" => "A user account was locked out"} } }
            if [event_id] == 4767 { mutate { add_field => { "short_message" => "A user account was unlocked"} } }
            if [event_id] == 4781 { 
                # For this one, also copy the OldTargetUserName to TargetUserName so it matches the other events better
                mutate { 
                    add_field => { "short_message" => "A username was changed"}
                    copy => { "[event_data][OldTargetUserName]" => "[event_data][TargetUserName]" }
                }
            }

            # Group management actions
            if [event_id] == 4764 { mutate { add_field => { "short_message" => "A group's type was changed"} } }

            if [event_id] == 4731 { mutate { add_field => { "short_message" => "A security-enabled local group was created"} } }
            if [event_id] == 4735 { mutate { add_field => { "short_message" => "A security-enabled local group was changed"} } }
            if [event_id] == 4734 { mutate { add_field => { "short_message" => "A security-enabled local group was deleted"} } }
            if [event_id] == 4732 { mutate { add_field => { "short_message" => "A member was added to a security-enabled local group"} } }
            if [event_id] == 4733 { mutate { add_field => { "short_message" => "A member was removed from a security-enabled local group"} } }

            if [event_id] == 4727 { mutate { add_field => { "short_message" => "A security-enabled global group was created"} } }
            if [event_id] == 4737 { mutate { add_field => { "short_message" => "A security-enabled global group was changed"} } }
            if [event_id] == 4730 { mutate { add_field => { "short_message" => "A security-enabled global group was deleted"} } }
            if [event_id] == 4728 { mutate { add_field => { "short_message" => "A member was added to a security-enabled global group"} } }
            if [event_id] == 4729 { mutate { add_field => { "short_message" => "A member was removed from a security-enabled global group"} } }

            if [event_id] == 4754 { mutate { add_field => { "short_message" => "A security-enabled universal group was created"} } }
            if [event_id] == 4755 { mutate { add_field => { "short_message" => "A security-enabled universal group was changed"} } }
            if [event_id] == 4758 { mutate { add_field => { "short_message" => "A security-enabled universal group was deleted"} } }
            if [event_id] == 4756 { mutate { add_field => { "short_message" => "A member was added to a security-enabled universal group"} } }
            if [event_id] == 4757 { mutate { add_field => { "short_message" => "A member was removed from a security-enabled universal group"} } }


            if [event_id] == 4744 { mutate { add_field => { "short_message" => "A local distribution group was created"} } }
            if [event_id] == 4745 { mutate { add_field => { "short_message" => "A local distribution group was changed"} } }
            if [event_id] == 4748 { mutate { add_field => { "short_message" => "A local distribution group was deleted"} } }
            if [event_id] == 4746 { mutate { add_field => { "short_message" => "A member was added to a local distribution group"} } }
            if [event_id] == 4747 { mutate { add_field => { "short_message" => "A member was removed from a local distribution group"} } }

            if [event_id] == 4749 { mutate { add_field => { "short_message" => "A global distribution group was created"} } }
            if [event_id] == 4750 { mutate { add_field => { "short_message" => "A global distribution group was changed"} } }
            if [event_id] == 4753 { mutate { add_field => { "short_message" => "A global distribution group was deleted"} } }
            if [event_id] == 4751 { mutate { add_field => { "short_message" => "A member was added to a global distribution group"} } }
            if [event_id] == 4752 { mutate { add_field => { "short_message" => "A member was removed from a global distribution group"} } }

            if [event_id] == 4759 { mutate { add_field => { "short_message" => "A universal distribution group was created"} } }
            if [event_id] == 4760 { mutate { add_field => { "short_message" => "A universal distribution group was changed"} } }
            if [event_id] == 4763 { mutate { add_field => { "short_message" => "A universal distribution group was deleted"} } }
            if [event_id] == 4761 { mutate { add_field => { "short_message" => "A member was added to a universal distribution group"} } }
            if [event_id] == 4762 { mutate { add_field => { "short_message" => "A member was removed from a universal distribution group"} } }


            # Misc other events
            if [event_id] == 5136 { mutate { add_field => { "short_message" => "A directory service object was modified"} } }
            if [event_id] == 5137 { mutate { add_field => { "short_message" => "A directory service object was created"} } }
            if [event_id] == 5139 { mutate { 
                add_field => { "short_message" => "A directory service object was moved"}
                copy => { "[event_data][OldObjectDN]" => "[event_data][ObjectDN]" }
            } }
            if [event_id] == 5141 { mutate { add_field => { "short_message" => "A directory service object was deleted"} } }
            if [event_id] == 4768 { mutate { add_field => { "short_message" => "A kerberos authentication ticket was requested"} } }


            # Add logon type fields for event IDs 4624,4634,4525
            if [event_data][LogonType] == "2" { mutate { add_field => { "Method" => "Interactive - Keyboard" } } }
            if [event_data][LogonType] == "3" { mutate { add_field => { "Method" => "Network Logon" } } }
            if [event_data][LogonType] == "4" { mutate { add_field => { "Method" => "Batch - Scheduled Task" } } }
            if [event_data][LogonType] == "5" { mutate { add_field => { "Method" => "Service Account" } } }
            if [event_data][LogonType] == "7" { mutate { add_field => { "Method" => "Unlock System" } } }
            if [event_data][LogonType] == "8" { mutate { add_field => { "Method" => "NetworkCleartext" } } }
            if [event_data][LogonType] == "9" { mutate { add_field => { "Method" => "NewCredentials" } } }
            if [event_data][LogonType] == "10" { mutate { add_field => { "Method" => "RemoteInteractive" } } }
            if [event_data][LogonType] == "11" { mutate { add_field => { "Method" => "CachedInteractive" } } }
            if [event_data][LogonType] == "0" { mutate { add_field => { "Method" => "System Account" } } }

            # Add status for event IDs 4771, 4776, 4769, 4768
            if [event_data][Status] == "0x0" { mutate { add_field => { "Statusmsg" => "Success" } } }
            if [event_data][Status] == "0x12" { mutate { add_field => { "Statusmsg" => "Account: disabled,expired,locked out,logon hours" } } }
            if [event_data][Status] == "0xB" { mutate { add_field => { "Statusmsg" => "Request start time is later than end time" } } }
            if [event_data][Status] == "0x17" { mutate { add_field => { "Statusmsg" => "Password has expired" } } }
            if [event_data][Status] == "0x18" { mutate { add_field => { "Statusmsg" => "Bad password" } } }
            if [event_data][Status] == "0x1b" { mutate { add_field => { "Statusmsg" => "Server principal valid for user-to-user only" } } }
            if [event_data][Status] == "0x1d" { mutate { add_field => { "Statusmsg" => "A service is not available" } } }
            if [event_data][Status] == "0x20" { mutate { add_field => { "Statusmsg" => "Ticket expired - frequently logged by computer accounts" } } }
            if [event_data][Status] == "0x25" { mutate { add_field => { "Statusmsg" => "Workstation's clock out of sync with DC" } } }
            if [event_data][Status] == "0x6" { mutate { add_field => { "Statusmsg" => "Username does not exist or has not replicated" } } }
            if [event_data][Status] == "0xc000006a" { mutate { add_field => { "Statusmsg" => "Incorrect password" } } }
            if [event_data][Status] == "0xc0000064" { mutate { add_field => { "Statusmsg" => "Username does not exist" } } }
            if [event_data][Status] == "0xc0000072" { mutate { add_field => { "Statusmsg" => "Account is disabled" } } }
            if [event_data][Status] == "0xc0000234" { mutate { add_field => { "Statusmsg" => "Account is locked out" } } }
            if [event_data][Status] == "0xc0000193" { mutate { add_field => { "Statusmsg" => "Account expired" } } }
            if [event_data][Status] == "0xc000006f" { mutate { add_field => { "Statusmsg" => "Logon outside hours" } } }
            if [event_data][Status] == "0xc0000224" { mutate { add_field => { "Statusmsg" => "User required to change password next time" } } }
            if [event_data][Status] == "0xc0000071" { mutate { add_field => { "Statusmsg" => "Password expired" } } }
            if [event_data][Status] == "0xc000006d" { mutate { add_field => { "Statusmsg" => "Logon Failure" } } }
            if [event_data][Status] == "0xc000006e" { mutate { add_field => { "Statusmsg" => "Unknown username or bad password" } } }
            if [event_data][Status] == "0xc000005e" { mutate { add_field => { "Statusmsg" => "No logon servers available to login" } } }
            if [event_data][Status] == "0xc0000133" { mutate { add_field => { "Statusmsg" => "Workstation's clock out of sync with the DC" } } }
            if [event_data][Status] == "0xc00002ee" { mutate { add_field => { "Statusmsg" => "An error occured during logon" } } }
            if [event_data][Status] == "0xc000015b" { mutate { add_field => { "Statusmsg" => "Login not allowed for this system" } } }
            if [event_data][Status] == "0xc0000225" { mutate { add_field => { "Statusmsg" => "Windows bug and not a risk" } } }
        }
        # End of security section
    }
}            
